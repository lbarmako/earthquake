buildscript {
    ext {
        buildTimestamp = System.getenv("PIPELINE_BUILD_TIMESTAMP") ?: new Date().format('yyyyMMddHHmmss')
    }

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath(
                'net.researchgate:gradle-release:2.4.0',
                'com.github.ben-manes:gradle-versions-plugin:0.13.0',
                'com.github.jengelman.gradle.plugins:shadow:1.2.3',
                'com.netflix.nebula:gradle-ospackage-plugin:4.0.0',
                'com.avast.gradle:docker-compose-gradle-plugin:0.3.13'
        )
    }
}

defaultTasks 'build'

allprojects {
    version = '1.0-SNAPSHOT'
    group = 'com.intfinit'
    ext.artifactName = "${project.name}"

    apply plugin: 'jacoco'
    jacoco {
        toolVersion = "0.7.6.201602180812"
    }
}

subprojects {
    apply plugin: 'maven'
    apply plugin: 'java'
    apply plugin: 'checkstyle'

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        testCompile(
                "junit:junit:$junitVersion",
                "org.assertj:assertj-core:$assertJVersion",
                "com.google.guava:guava:$guavaVersion",
        )
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            csv.enabled = false
            html.enabled = true
            html.destination "${buildDir}/jacocoHtml"
        }
    }

    checkstyle {
        configFile = new File("$rootDir/build-config/checkstyle.xml")
        configProperties = [
                "checkstyleConfigDir": "$rootDir/build-config"
        ]
        toolVersion = checkstyleToolVersion
    }

    tasks.withType(Checkstyle) {
        mustRunAfter test, testClasses
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileJava.options.incremental = true
}


task runConfigurations(type: Copy) {
    from('build-config/runConfigurations')
    into('.idea/runConfigurations')
    include('*.xml')
}