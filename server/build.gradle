apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'
apply plugin: 'nebula.ospackage'
apply from: "${rootDir}/gradle/docker-compose.gradle"
apply from: "${rootDir}/gradle/mysql-ready.gradle"

dependencies {
    compile(
            project(':earthquake-model'),
            "com.google.inject:guice:$guiceVersion",
            "com.google.inject.extensions:guice-persist:$guiceVersion",
            "io.dropwizard:dropwizard-db:$dropwizardVersion",
            "io.dropwizard:dropwizard-jdbi:$dropwizardVersion",
            "mysql:mysql-connector-java:$mysqlConnectorVersion",
            "io.dropwizard:dropwizard-core:$dropwizardVersion",
            "io.dropwizard:dropwizard-hibernate:$dropwizardVersion",
            "io.dropwizard.modules:dropwizard-flyway:$dropwizardFlywayBundleVersion",
            "com.mchange:c3p0:$c3poVersion",
            "org.hibernate:hibernate-entitymanager:$hibernateVersion",
            "org.hibernate:hibernate-java8:$hibernateVersion",
            "org.hibernate:hibernate-c3p0:$hibernateVersion"
    )
    testCompile(
            project(":earthquake-model:earthquake-model-fixture").sourceSets.test.output,
            "io.dropwizard:dropwizard-testing:$dropwizardVersion",
            "org.skyscreamer:jsonassert:$jsonAssertVersion",
            "org.jooq:jool:$joolJooqVersion",
            project(":earthquake-sal"),
            "org.jetbrains:annotations:$jetbrainsAnnotationsVersion",
            "pl.pragmatists:JUnitParams:$junitParamsVersion"
    )
}

mainClassName = 'com.intfinit.earthquakes.server.EarthquakeApplication'

shadowJar {
    mergeServiceFiles()
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
}

runShadow {
    jvmArgs "-Xmx512m",
            "-Ddw.logging.appenders[0].threshold=OFF",
            "-Ddw.logging.appenders[1].threshold=INFO",
            "-Ddw.server.requestLog.appenders[0].threshold=INFO"

    args "server", "src/main/resources/earthquakes.yml"
}

jar {
    manifest {
        attributes("Main-Class": mainClassName, "Implementation-Version": version)
    }
    baseName "earthquake"
}

dockerCompose.isRequiredBy(test)

composeUp.finalizedBy mysqlReady
run.dependsOn composeUp